# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-05-03 10:28
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import realm.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('example', '0001_initial'),
        ('tenant', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('name', models.CharField(
                    max_length=80,
                    unique=True,
                    verbose_name='name'
                )),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
            },
            managers=[
                ('objects', realm.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('permission', models.CharField(
                    choices=[('view', 'View'), ('edit', 'Edit'), ('action', 'Action')],
                    max_length=10,
                    verbose_name='permission'
                )),
                ('permission_type', models.CharField(
                    choices=[('allow', 'Allow'), ('disallow', 'Disallow')], default='allow',
                    max_length=10,
                    verbose_name='permission type'
                )),
                ('target', models.CharField(max_length=100, verbose_name='target')),
                ('condition', django.contrib.postgres.fields.ArrayField(
                    base_field=models.CharField(max_length=100),
                    blank=True,
                    default=[],
                    size=None,
                    verbose_name='condition'
                )),
            ],
        ),
        migrations.CreateModel(
            name='Realm',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('groups', models.ManyToManyField(
                    blank=True,
                    help_text='The groups this realm belongs to. '
                    'A realm will get all permissions granted to each of their groups.',
                    related_name='realm_set',
                    related_query_name='realm',
                    to='realm.Group',
                    verbose_name='groups'
                )),
                ('organization', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to='example.Organization'
                )),
                ('realm_permissions', models.ManyToManyField(
                    blank=True,
                    help_text='Specific permissions for this realm.',
                    related_name='realm_set',
                    related_query_name='realm',
                    to='realm.Permission',
                    verbose_name='realm permissions'
                )),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to=settings.AUTH_USER_MODEL
                )),
                ('workspace', models.ForeignKey(
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to='tenant.Workspace'
                )),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='permissions',
            field=models.ManyToManyField(
                blank=True,
                to='realm.Permission',
                verbose_name='permissions'
            ),
        ),
    ]
